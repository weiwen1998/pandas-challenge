##The Startup Proces

import pandas as pd

school_data_to_load = "Resources/schools_complete.csv"
student_data_to_load = "Resources/students_complete.csv"

school_data = pd.read_csv(school_data_to_load)
student_data = pd.read_csv(student_data_to_load)

school_data_complete = pd.merge(student_data, school_data, how="left", on=["school_name", "school_name"])

##District Summary

#Total Schools
school_count = len(school_data["School ID"].unique())
school_count

#Total Students
student_count = len(student_data["Student ID"].unique())
student_count

#Total Budget
total = school_data["budget"].sum()
total

#Average Math Score
avg_math = student_data["math_score"].mean()
avg_math

#Average Reading Score
avg_read = student_data["reading_score"].mean()
avg_read

#Overall Math Score (%)
student_math = student_data.loc[student_data["math_score"] >= 70, :]
student_math
student_count_math=len(student_math["Student ID"].unique())
student_count_math
student_count_math_percent = student_count_math/student_count * 100
student_count_math_percent

#Overall Reading Score (%)
student_read = student_data.loc[student_data["reading_score"] >= 70, :]
student_read
student_count_read=len(student_read["Student ID"].unique())
student_count_read
student_count_read_percent = student_count_read/student_count * 100
student_count_read_percent

#Overall Passing Score (%)
student_math_and_read = student_data[(student_data["reading_score"]>=70) & (student_data["math_score"] >= 70)]
student_math_and_read
student_count_math_and_read=len(student_math_and_read["Student ID"].unique())
student_count_math_and_read
student_count_math_and_read_percent = student_count_math_and_read/student_count * 100
student_count_math_and_read_percent

#Generating the District Summary Data Frame
summary_df = pd.DataFrame({"Total Schools": school_count,
                            "Total Students": student_count,
                            "Total Budget": total, 
                          "Average Math Score": avg_math,
                          "Average Reading Score":avg_read,
                          "Percentage of Students with a Passing Math Score": student_count_math_percent,
                          "Percentage of Students with a Passing Reading Score": student_count_read_percent,
                          "Percentage of Students with a Passing Math and Reading Score": student_count_math_and_read_percent}, index=[0])
summary_df


##School Summary Data Frame

school_and_students = pd.merge(school_data, student_data)
school_and_students["school_name"].unique()
len(school_and_students["school_name"].unique())

#Total School Budget
total_school_budget=school_and_students.groupby("school_name").mean()["budget"]
total_school_budget

#Total Students per School
student_per_school=school_and_students.groupby("school_name").count()["School ID"]
student_per_school

#Calculating the Total School Budget for every student in the schools
inv_school_budget=total_school_budget/student_per_school
inv_school_budget

#Average Math Score per School
avg_math_score_per_school=school_and_students.groupby("school_name").mean()["math_score"]
avg_math_score_per_school

#Average Reading Score per School
avg_reading_score_per_school=school_and_students.groupby("school_name").mean()["reading_score"]
avg_reading_score_per_school
school_and_students

#Calculating per school value counts and overall passing rate

per_school_counts = school_and_students["school_name"].value_counts()
passing_score = school_and_students[(school_and_students["reading_score"] >= 70)
                                               & (school_and_students["math_score"] >= 70)]
overall_passing_rate = passing_score.groupby(["school_name"]).count()["student_name"] / per_school_counts * 100
overall_passing_rate

#Overall Math Score
math_score = school_and_students[(school_and_students["math_score"] >= 70)]
overall_math_rate = math_score.groupby(["school_name"]).count()["student_name"] / per_school_counts * 100
overall_math_rate

#Overall Reading Score
reading_score = school_and_students[(school_and_students["reading_score"] >= 70)]
overall_reading_rate = reading_score.groupby(["school_name"]).count()["student_name"] / per_school_counts * 100
overall_reading_rate

#School Type
school_type_df=school_and_students[["school_name","type"]].copy()
school_type_df.drop_duplicates(inplace=True)
school_type_df.set_index("school_name",inplace=True)
types=school_type_df["type"]
types

#Getting the School Summary Data Frame
school_summary_df = pd.DataFrame({"School Type": types,
                            "Total Students": per_school_counts,
                            "Total Budget": total_school_budget,
                            "Per Student Budget": inv_school_budget,
                          "Average Math Score": avg_math_score_per_school,
                          "Average Reading Score":avg_reading_score_per_school,
                          "Percentage of Students with a Passing Math Score": overall_math_rate,
                          "Percentage of Students with a Passing Reading Score": overall_reading_rate,
                          "Percentage of Students with a Passing Math and Reading Score": overall_passing_rate})
school_summary_df

##Top Performing Schools

top_performing_schools_df = school_summary_df.sort_values("Percentage of Students with a Passing Math and Reading Score", ascending=False)

top_performing_schools_df= top_performing_schools_df.head(10)

##Bottom Performing Schools

bottom_performing_schools_df = school_summary_df.sort_values("Percentage of Students with a Passing Math and Reading Score", ascending=True)

bottom_performing_schools_df= bottom_performing_schools_df.head(5)

##Math Scores By Grade
grade9 = school_and_students.loc[school_and_students["grade"] == "9th", :]
grade10 = school_and_students.loc[school_and_students["grade"] == "10th", :]
grade11 = school_and_students.loc[school_and_students["grade"] == "11th", :]
grade12 = school_and_students.loc[school_and_students["grade"] == "12th", :]

math_score_grade9 = grade9.groupby(["school_name"]).mean()["math_score"]
math_score_grade10 = grade10.groupby(["school_name"]).mean()["math_score"]
math_score_grade11 = grade11.groupby(["school_name"]).mean()["math_score"]
math_score_grade12 = grade12.groupby(["school_name"]).mean()["math_score"]

math_scores_by_grade_df = pd.DataFrame({"9th":math_score_grade9,
                                       "10th":math_score_grade10,
                                       "11th":math_score_grade11,
                                       "12th":math_score_grade12})
math_scores_by_grade_df
bottom_performing_schools_df
top_performing_schools_df

##Reading Scores By Grade
reading_score_grade9 = grade9.groupby(["school_name"]).mean()["reading_score"]
reading_score_grade10 = grade10.groupby(["school_name"]).mean()["reading_score"]
reading_score_grade11 = grade11.groupby(["school_name"]).mean()["reading_score"]
reading_score_grade12 = grade12.groupby(["school_name"]).mean()["reading_score"]

reading_scores_by_grade_df = pd.DataFrame({"9th":reading_score_grade9,
                                       "10th":reading_score_grade10,
                                       "11th":reading_score_grade11,
                                       "12th":reading_score_grade12})
reading_scores_by_grade_df

##Scores By School Spending
bins = [0,584,630,645,680]

group_labels = ["<$585", "$585-630", "$630-645", "$645-680"]

pd.cut(school_summary_df["Per Student Budget"], bins, labels=group_labels)

school_summary_df["School Spending Range"] = pd.cut(school_summary_df["Per Student Budget"], bins, labels=group_labels)

school_summary_df

school_spending = school_summary_df.groupby("School Spending Range")


##Scores By School Size

bins2 = [0,1000,2000,5000]

group_labels2 = ["Small (<1000)", "Medium (1000-2000)", "Large (2000-5000)"]


school_summary_df["School Size"] = pd.cut(school_summary_df["Total Students"], bins2, labels=group_labels2)

school_size = school_summary_df.groupby("School Size")

school_size[["Average Math Score", "Average Reading Score", "Percentage of Students with a Passing Math Score", "Percentage of Students with a Passing Reading Score", "Percentage of Students with a Passing Math and Reading Score"]].mean()
school_spending[["Average Math Score", "Average Reading Score", "Percentage of Students with a Passing Math Score", "Percentage of Students with a Passing Reading Score", "Percentage of Students with a Passing Math and Reading Score"]].mean()

##Scores By School Type

school_type = school_summary_df.groupby("School Type")

school_type[["Average Math Score", "Average Reading Score", "Percentage of Students with a Passing Math Score", "Percentage of Students with a Passing Reading Score", "Percentage of Students with a Passing Math and Reading Score"]].mean()
